// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: standard_cyborg/proto/sc3d/polygon_label_multi.proto

#include "standard_cyborg/proto/sc3d/polygon_label_multi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec2_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto;
namespace standard_cyborg {
namespace proto {
namespace sc3d {
class PolygonLabelMulti_SubPolygonDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PolygonLabelMulti_SubPolygon> _instance;
} _PolygonLabelMulti_SubPolygon_default_instance_;
class PolygonLabelMulti_PolygonLabelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PolygonLabelMulti_PolygonLabel> _instance;
} _PolygonLabelMulti_PolygonLabel_default_instance_;
class PolygonLabelMultiDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PolygonLabelMulti> _instance;
} _PolygonLabelMulti_default_instance_;
}  // namespace sc3d
}  // namespace proto
}  // namespace standard_cyborg
static void InitDefaultsscc_info_PolygonLabelMulti_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::standard_cyborg::proto::sc3d::_PolygonLabelMulti_default_instance_;
    new (ptr) ::standard_cyborg::proto::sc3d::PolygonLabelMulti();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::standard_cyborg::proto::sc3d::PolygonLabelMulti::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PolygonLabelMulti_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PolygonLabelMulti_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto}, {
      &scc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base,}};

static void InitDefaultsscc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::standard_cyborg::proto::sc3d::_PolygonLabelMulti_PolygonLabel_default_instance_;
    new (ptr) ::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto}, {
      &scc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base,}};

static void InitDefaultsscc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::standard_cyborg::proto::sc3d::_PolygonLabelMulti_SubPolygon_default_instance_;
    new (ptr) ::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto}, {
      &scc_info_Vec2_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon, positions_),
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel, subpolygons_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti, polygonlabels_),
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti, scimagepath_),
  PROTOBUF_FIELD_OFFSET(::standard_cyborg::proto::sc3d::PolygonLabelMulti, qcstatus_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon)},
  { 7, -1, sizeof(::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel)},
  { 13, -1, sizeof(::standard_cyborg::proto::sc3d::PolygonLabelMulti)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::standard_cyborg::proto::sc3d::_PolygonLabelMulti_SubPolygon_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::standard_cyborg::proto::sc3d::_PolygonLabelMulti_PolygonLabel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::standard_cyborg::proto::sc3d::_PolygonLabelMulti_default_instance_),
};

const char descriptor_table_protodef_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n4standard_cyborg/proto/sc3d/polygon_lab"
  "el_multi.proto\022\032standard_cyborg.proto.sc"
  "3d\032%standard_cyborg/proto/math/core.prot"
  "o\032*standard_cyborg/proto/sc3d/qc_status."
  "proto\"\343\002\n\021PolygonLabelMulti\022Q\n\rpolygonLa"
  "bels\030\004 \003(\0132:.standard_cyborg.proto.sc3d."
  "PolygonLabelMulti.PolygonLabel\022\023\n\013scImag"
  "ePath\030\005 \001(\t\0226\n\010qcStatus\030\006 \001(\0162$.standard"
  "_cyborg.proto.sc3d.QcStatus\032O\n\nSubPolygo"
  "n\0223\n\tpositions\030\001 \003(\0132 .standard_cyborg.p"
  "roto.math.Vec2\022\014\n\004flag\030\002 \001(\010\032]\n\014PolygonL"
  "abel\022M\n\013subPolygons\030\003 \003(\01328.standard_cyb"
  "org.proto.sc3d.PolygonLabelMulti.SubPoly"
  "gonb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_deps[2] = {
  &::descriptor_table_standard_5fcyborg_2fproto_2fmath_2fcore_2eproto,
  &::descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fqc_5fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_sccs[3] = {
  &scc_info_PolygonLabelMulti_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base,
  &scc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base,
  &scc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_once;
static bool descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto = {
  &descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_initialized, descriptor_table_protodef_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto, "standard_cyborg/proto/sc3d/polygon_label_multi.proto", 531,
  &descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_once, descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_sccs, descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto::offsets,
  file_level_metadata_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto, 3, file_level_enum_descriptors_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto, file_level_service_descriptors_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto), true);
namespace standard_cyborg {
namespace proto {
namespace sc3d {

// ===================================================================

void PolygonLabelMulti_SubPolygon::InitAsDefaultInstance() {
}
class PolygonLabelMulti_SubPolygon::_Internal {
 public:
};

void PolygonLabelMulti_SubPolygon::clear_positions() {
  positions_.Clear();
}
PolygonLabelMulti_SubPolygon::PolygonLabelMulti_SubPolygon()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
}
PolygonLabelMulti_SubPolygon::PolygonLabelMulti_SubPolygon(const PolygonLabelMulti_SubPolygon& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      positions_(from.positions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
}

void PolygonLabelMulti_SubPolygon::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base);
  flag_ = false;
}

PolygonLabelMulti_SubPolygon::~PolygonLabelMulti_SubPolygon() {
  // @@protoc_insertion_point(destructor:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  SharedDtor();
}

void PolygonLabelMulti_SubPolygon::SharedDtor() {
}

void PolygonLabelMulti_SubPolygon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PolygonLabelMulti_SubPolygon& PolygonLabelMulti_SubPolygon::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PolygonLabelMulti_SubPolygon_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base);
  return *internal_default_instance();
}


void PolygonLabelMulti_SubPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  flag_ = false;
  _internal_metadata_.Clear();
}

const char* PolygonLabelMulti_SubPolygon::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .standard_cyborg.proto.math.Vec2 positions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_positions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // bool flag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PolygonLabelMulti_SubPolygon::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .standard_cyborg.proto.math.Vec2 positions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_positions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_positions(i), target, stream);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  return target;
}

size_t PolygonLabelMulti_SubPolygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .standard_cyborg.proto.math.Vec2 positions = 1;
  total_size += 1UL * this->_internal_positions_size();
  for (const auto& msg : this->positions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool flag = 2;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolygonLabelMulti_SubPolygon::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  const PolygonLabelMulti_SubPolygon* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PolygonLabelMulti_SubPolygon>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
    MergeFrom(*source);
  }
}

void PolygonLabelMulti_SubPolygon::MergeFrom(const PolygonLabelMulti_SubPolygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void PolygonLabelMulti_SubPolygon::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolygonLabelMulti_SubPolygon::CopyFrom(const PolygonLabelMulti_SubPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolygonLabelMulti_SubPolygon::IsInitialized() const {
  return true;
}

void PolygonLabelMulti_SubPolygon::InternalSwap(PolygonLabelMulti_SubPolygon* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  positions_.InternalSwap(&other->positions_);
  swap(flag_, other->flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PolygonLabelMulti_SubPolygon::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PolygonLabelMulti_PolygonLabel::InitAsDefaultInstance() {
}
class PolygonLabelMulti_PolygonLabel::_Internal {
 public:
};

PolygonLabelMulti_PolygonLabel::PolygonLabelMulti_PolygonLabel()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
}
PolygonLabelMulti_PolygonLabel::PolygonLabelMulti_PolygonLabel(const PolygonLabelMulti_PolygonLabel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      subpolygons_(from.subpolygons_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
}

void PolygonLabelMulti_PolygonLabel::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base);
}

PolygonLabelMulti_PolygonLabel::~PolygonLabelMulti_PolygonLabel() {
  // @@protoc_insertion_point(destructor:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  SharedDtor();
}

void PolygonLabelMulti_PolygonLabel::SharedDtor() {
}

void PolygonLabelMulti_PolygonLabel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PolygonLabelMulti_PolygonLabel& PolygonLabelMulti_PolygonLabel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PolygonLabelMulti_PolygonLabel_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base);
  return *internal_default_instance();
}


void PolygonLabelMulti_PolygonLabel::Clear() {
// @@protoc_insertion_point(message_clear_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subpolygons_.Clear();
  _internal_metadata_.Clear();
}

const char* PolygonLabelMulti_PolygonLabel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon subPolygons = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subpolygons(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PolygonLabelMulti_PolygonLabel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon subPolygons = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subpolygons_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_subpolygons(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  return target;
}

size_t PolygonLabelMulti_PolygonLabel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .standard_cyborg.proto.sc3d.PolygonLabelMulti.SubPolygon subPolygons = 3;
  total_size += 1UL * this->_internal_subpolygons_size();
  for (const auto& msg : this->subpolygons_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolygonLabelMulti_PolygonLabel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  GOOGLE_DCHECK_NE(&from, this);
  const PolygonLabelMulti_PolygonLabel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PolygonLabelMulti_PolygonLabel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
    MergeFrom(*source);
  }
}

void PolygonLabelMulti_PolygonLabel::MergeFrom(const PolygonLabelMulti_PolygonLabel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subpolygons_.MergeFrom(from.subpolygons_);
}

void PolygonLabelMulti_PolygonLabel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolygonLabelMulti_PolygonLabel::CopyFrom(const PolygonLabelMulti_PolygonLabel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolygonLabelMulti_PolygonLabel::IsInitialized() const {
  return true;
}

void PolygonLabelMulti_PolygonLabel::InternalSwap(PolygonLabelMulti_PolygonLabel* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  subpolygons_.InternalSwap(&other->subpolygons_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PolygonLabelMulti_PolygonLabel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PolygonLabelMulti::InitAsDefaultInstance() {
}
class PolygonLabelMulti::_Internal {
 public:
};

PolygonLabelMulti::PolygonLabelMulti()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:standard_cyborg.proto.sc3d.PolygonLabelMulti)
}
PolygonLabelMulti::PolygonLabelMulti(const PolygonLabelMulti& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      polygonlabels_(from.polygonlabels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scimagepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scimagepath().empty()) {
    scimagepath_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.scimagepath_);
  }
  qcstatus_ = from.qcstatus_;
  // @@protoc_insertion_point(copy_constructor:standard_cyborg.proto.sc3d.PolygonLabelMulti)
}

void PolygonLabelMulti::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PolygonLabelMulti_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base);
  scimagepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  qcstatus_ = 0;
}

PolygonLabelMulti::~PolygonLabelMulti() {
  // @@protoc_insertion_point(destructor:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  SharedDtor();
}

void PolygonLabelMulti::SharedDtor() {
  scimagepath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PolygonLabelMulti::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PolygonLabelMulti& PolygonLabelMulti::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PolygonLabelMulti_standard_5fcyborg_2fproto_2fsc3d_2fpolygon_5flabel_5fmulti_2eproto.base);
  return *internal_default_instance();
}


void PolygonLabelMulti::Clear() {
// @@protoc_insertion_point(message_clear_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygonlabels_.Clear();
  scimagepath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  qcstatus_ = 0;
  _internal_metadata_.Clear();
}

const char* PolygonLabelMulti::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel polygonLabels = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_polygonlabels(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string scImagePath = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_scimagepath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "standard_cyborg.proto.sc3d.PolygonLabelMulti.scImagePath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .standard_cyborg.proto.sc3d.QcStatus qcStatus = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_qcstatus(static_cast<::standard_cyborg::proto::sc3d::QcStatus>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PolygonLabelMulti::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel polygonLabels = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_polygonlabels_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_polygonlabels(i), target, stream);
  }

  // string scImagePath = 5;
  if (this->scimagepath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scimagepath().data(), static_cast<int>(this->_internal_scimagepath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "standard_cyborg.proto.sc3d.PolygonLabelMulti.scImagePath");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_scimagepath(), target);
  }

  // .standard_cyborg.proto.sc3d.QcStatus qcStatus = 6;
  if (this->qcstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_qcstatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  return target;
}

size_t PolygonLabelMulti::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .standard_cyborg.proto.sc3d.PolygonLabelMulti.PolygonLabel polygonLabels = 4;
  total_size += 1UL * this->_internal_polygonlabels_size();
  for (const auto& msg : this->polygonlabels_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string scImagePath = 5;
  if (this->scimagepath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scimagepath());
  }

  // .standard_cyborg.proto.sc3d.QcStatus qcStatus = 6;
  if (this->qcstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_qcstatus());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PolygonLabelMulti::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  GOOGLE_DCHECK_NE(&from, this);
  const PolygonLabelMulti* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PolygonLabelMulti>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:standard_cyborg.proto.sc3d.PolygonLabelMulti)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:standard_cyborg.proto.sc3d.PolygonLabelMulti)
    MergeFrom(*source);
  }
}

void PolygonLabelMulti::MergeFrom(const PolygonLabelMulti& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygonlabels_.MergeFrom(from.polygonlabels_);
  if (from.scimagepath().size() > 0) {

    scimagepath_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.scimagepath_);
  }
  if (from.qcstatus() != 0) {
    _internal_set_qcstatus(from._internal_qcstatus());
  }
}

void PolygonLabelMulti::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolygonLabelMulti::CopyFrom(const PolygonLabelMulti& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:standard_cyborg.proto.sc3d.PolygonLabelMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolygonLabelMulti::IsInitialized() const {
  return true;
}

void PolygonLabelMulti::InternalSwap(PolygonLabelMulti* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  polygonlabels_.InternalSwap(&other->polygonlabels_);
  scimagepath_.Swap(&other->scimagepath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(qcstatus_, other->qcstatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PolygonLabelMulti::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sc3d
}  // namespace proto
}  // namespace standard_cyborg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon* Arena::CreateMaybeMessage< ::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon >(Arena* arena) {
  return Arena::CreateInternal< ::standard_cyborg::proto::sc3d::PolygonLabelMulti_SubPolygon >(arena);
}
template<> PROTOBUF_NOINLINE ::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel* Arena::CreateMaybeMessage< ::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel >(Arena* arena) {
  return Arena::CreateInternal< ::standard_cyborg::proto::sc3d::PolygonLabelMulti_PolygonLabel >(arena);
}
template<> PROTOBUF_NOINLINE ::standard_cyborg::proto::sc3d::PolygonLabelMulti* Arena::CreateMaybeMessage< ::standard_cyborg::proto::sc3d::PolygonLabelMulti >(Arena* arena) {
  return Arena::CreateInternal< ::standard_cyborg::proto::sc3d::PolygonLabelMulti >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
